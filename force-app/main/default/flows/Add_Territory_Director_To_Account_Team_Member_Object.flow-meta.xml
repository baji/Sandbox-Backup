<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>49.0</apiVersion>
    <decisions>
        <name>Determine_If_Territroy_Director_Has_Been_Found</name>
        <label>Determine If Territroy Director Has Been Found</label>
        <locationX>209</locationX>
        <locationY>244</locationY>
        <defaultConnector>
            <targetReference>Territory_Director_Was_Found</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Delete Old Territory Director Member</defaultConnectorLabel>
        <rules>
            <name>Territory_Director_Has_Not_Been_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varATMID</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_User_Record_Info_For_Terrtirtory_Director</targetReference>
            </connector>
            <label>Territory Director Has Not Been Found</label>
        </rules>
    </decisions>
    <description>Add Territory Directors to Account Team Member objects for specific Churches.</description>
    <interviewLabel>Add Territory Director To Account Team Member Object {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Add Territory Director To Account Team Member Object</label>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Territory_Director_For_Account_Team</name>
        <label>Create Territory Director For Account Team</label>
        <locationX>729</locationX>
        <locationY>388</locationY>
        <assignRecordIdToReference>varATMID</assignRecordIdToReference>
        <inputAssignments>
            <field>AccountAccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>varAccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ContactAccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OpportunityAccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>TeamMemberRole</field>
            <value>
                <stringValue>Territory Director</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserId</field>
            <value>
                <elementReference>varUserID</elementReference>
            </value>
        </inputAssignments>
        <object>AccountTeamMember</object>
    </recordCreates>
    <recordDeletes>
        <name>Territory_Director_Was_Found</name>
        <label>Territory Director Was Found</label>
        <locationX>723</locationX>
        <locationY>259</locationY>
        <connector>
            <targetReference>Get_User_Record_Info_For_Terrtirtory_Director</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varATMID</elementReference>
            </value>
        </filters>
        <object>AccountTeamMember</object>
    </recordDeletes>
    <recordLookups>
        <name>Find_Territory_Director</name>
        <label>Find Territory Director</label>
        <locationX>210</locationX>
        <locationY>104</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Determine_If_Territroy_Director_Has_Been_Found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varAccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>TeamMemberRole</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Territory Director</stringValue>
            </value>
        </filters>
        <object>AccountTeamMember</object>
        <outputAssignments>
            <assignToReference>varATMID</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_User_Record_Info_For_Terrtirtory_Director</name>
        <label>Get User Record Info For Terrtirtory Director</label>
        <locationX>211</locationX>
        <locationY>393</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Territory_Director_For_Account_Team</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varTDEmail</elementReference>
            </value>
        </filters>
        <filters>
            <field>FirstName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varTDFirstName</elementReference>
            </value>
        </filters>
        <filters>
            <field>LastName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varTDLastName</elementReference>
            </value>
        </filters>
        <object>User</object>
        <outputAssignments>
            <assignToReference>varUserID</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <startElementReference>Find_Territory_Director</startElementReference>
    <status>Obsolete</status>
    <variables>
        <name>varAccountId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varAnATM</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>AccountTeamMember</objectType>
    </variables>
    <variables>
        <name>varATMID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varATMsToDelete</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>AccountTeamMember</objectType>
    </variables>
    <variables>
        <name>varTDEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varTDFirstName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varTDLastName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varUserID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
